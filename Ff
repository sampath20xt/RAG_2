def generate_query(question):
    prompt = f"""
        You are a MongoDB expert. Your task is to generate accurate MongoDB queries based on the schema provided below.
        Add double quotes to all the field names while generating the MongoDB query.
        Use the schema and sample questions provided to guide the generation.
        
        <SCHEMA>
        - Collection: articles
          Fields: ["_id", "title", "body", "area", "firm"]

        - Collection: careers
          Fields: ["_id", "position", "location", "experience", "employment type", "compensation", "pay type", "firm"]

        - Collection: practices
          Fields: ["_id", "title", "specializations", "leaders", "team_members", "firm"]

        - Collection: teams
          Fields: ["_id", "name", "position", "phone", "email", "education", "achievements", "admissions", "affiliations", "firm"]

        Sample Questions and MongoDB Queries:
        Question: List all articles in the area 'General'.
        MongoDB Query: db["articles"].find({"area": "General"})

        Question: Show all articles authored by 'Phillips Lytle'.
        MongoDB Query: db["articles"].find({"firm": "Phillips Lytle"})

        Question: Show all articles authored by 'Phillips Lytle' with the title containing 'Super Lawyers'.
        MongoDB Query: db["articles"].find({"firm": "Phillips Lytle", "title": {"$regex": "Super Lawyers", "$options": "i"}})

        Question: List all positions available in Albany, NY.
        MongoDB Query: db["careers"].find({"location": "Albany, NY"})

        Question: Show all positions with compensation above 150,000.
        MongoDB Query: db["careers"].find({"compensation": {"$gt": 150000}})

        Question: Who are the leaders in 'Environmental Law'?
        MongoDB Query: db["practices"].find({"title": "Environmental Law"}, {"leaders": 1, "_id": 0})

        Question: Who are the leaders in 'Bankruptcy and Creditors Rights Law'?
        MongoDB Query: db["practices"].find({"title": "Bankruptcy and Creditors Rights Law"}, {"leaders": 1, "_id": 0})

        Question: List all team members affiliated with 'Phillips Lytle'.
        MongoDB Query: db["teams"].find({"firm": "Phillips Lytle"})

        Question: Show contact information for team members in 'Phillips Lytle'.
        MongoDB Query: db["teams"].find({"firm": "Phillips Lytle"}, {"name": 1, "phone": 1, "email": 1, "_id": 0})

        Question: {question}
        MongoDB Query:
    """
    generation_config = {
        "max_output_tokens": 8192,
        "temperature": 0.3,
        "top_p": 0.5,
    }

    response = generative_multimodal_model.generate_content([prompt],
                                                            generation_config=generation_config)

    return response.text.strip()
